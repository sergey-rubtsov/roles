package com.roles.assignment.ui.windows;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class IncomingJournal extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout body;
	@AutoGenerated
	private VerticalLayout content;
	@AutoGenerated
	private HorizontalLayout filtersPanel;
	@AutoGenerated
	private ComboBox status;
	@AutoGenerated
	private HorizontalLayout executorSelect;
	@AutoGenerated
	private Button execButton;
	@AutoGenerated
	private TextField executorVal;
	@AutoGenerated
	private TextField number;
	@AutoGenerated
	private ComboBox subType;
	@AutoGenerated
	private TextField contain;
	@AutoGenerated
	private ComboBox lastSelected;
	@AutoGenerated
	private HorizontalLayout title;

	public IncomingJournal() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// body
		body = buildBody();
		mainLayout.addComponent(body,
				"top:10.0px;right:10.0px;bottom:10.0px;left:10.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildBody() {
		// common part: create layout
		body = new VerticalLayout();
		body.setImmediate(false);
		body.setWidth("100.0%");
		body.setHeight("100.0%");
		body.setMargin(true);
		
		// content
		content = buildContent();
		body.addComponent(content);
		
		return body;
	}

	@AutoGenerated
	private VerticalLayout buildContent() {
		// common part: create layout
		content = new VerticalLayout();
		content.setImmediate(false);
		content.setWidth("100.0%");
		content.setHeight("-1px");
		content.setMargin(false);
		
		// title
		title = new HorizontalLayout();
		title.setImmediate(false);
		title.setWidth("100.0%");
		title.setHeight("30px");
		title.setMargin(false);
		content.addComponent(title);
		
		// filtersPanel
		filtersPanel = buildFiltersPanel();
		content.addComponent(filtersPanel);
		
		return content;
	}

	@AutoGenerated
	private HorizontalLayout buildFiltersPanel() {
		// common part: create layout
		filtersPanel = new HorizontalLayout();
		filtersPanel.setImmediate(false);
		filtersPanel.setWidth("100.0%");
		filtersPanel.setHeight("40px");
		filtersPanel.setMargin(false);
		filtersPanel.setSpacing(true);
		
		// lastSelected
		lastSelected = new ComboBox();
		lastSelected.setCaption("Последние");
		lastSelected.setImmediate(false);
		lastSelected.setWidth("70px");
		lastSelected.setHeight("-1px");
		filtersPanel.addComponent(lastSelected);
		
		// contain
		contain = new TextField();
		contain.setCaption("Содержание");
		contain.setImmediate(false);
		contain.setWidth("120px");
		contain.setHeight("-1px");
		contain.setSecret(false);
		filtersPanel.addComponent(contain);
		
		// subType
		subType = new ComboBox();
		subType.setCaption("Подтип");
		subType.setImmediate(false);
		subType.setWidth("110px");
		subType.setHeight("-1px");
		filtersPanel.addComponent(subType);
		
		// number
		number = new TextField();
		number.setCaption("Рег. номер");
		number.setImmediate(false);
		number.setWidth("100px");
		number.setHeight("-1px");
		number.setSecret(false);
		filtersPanel.addComponent(number);
		
		// executorSelect
		executorSelect = buildExecutorSelect();
		filtersPanel.addComponent(executorSelect);
		filtersPanel.setExpandRatio(executorSelect, 1.0f);
		
		// status
		status = new ComboBox();
		status.setCaption("Статус регистрации");
		status.setImmediate(false);
		status.setWidth("-1px");
		status.setHeight("-1px");
		filtersPanel.addComponent(status);
		
		return filtersPanel;
	}

	@AutoGenerated
	private HorizontalLayout buildExecutorSelect() {
		// common part: create layout
		executorSelect = new HorizontalLayout();
		executorSelect.setCaption("Исполнитель");
		executorSelect.setImmediate(false);
		executorSelect.setWidth("120px");
		executorSelect.setHeight("100.0%");
		executorSelect.setMargin(false);
		
		// executorVal
		executorVal = new TextField();
		executorVal.setImmediate(false);
		executorVal.setWidth("-1px");
		executorVal.setHeight("-1px");
		executorVal.setSecret(false);
		executorSelect.addComponent(executorVal);
		
		// execButton
		execButton = new Button();
		execButton.setCaption("+");
		execButton.setImmediate(false);
		execButton.setWidth("-1px");
		execButton.setHeight("-1px");
		executorSelect.addComponent(execButton);
		
		return executorSelect;
	}

}
